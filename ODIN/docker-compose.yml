version: '3.8'

services:
  # PostgreSQL para datos relacionales
  postgres:
    image: postgres:15
    container_name: pluto-postgres
    environment:
      POSTGRES_DB: pluto_learning
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - pluto-network

  # MongoDB para contenidos versionados
  mongodb:
    image: mongo:7
    container_name: pluto-mongodb
    environment:
      MONGO_INITDB_DATABASE: pluto_learning_content
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - pluto-network

  # Apache Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: pluto-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - pluto-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: pluto-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - pluto-network

  # Keycloak para autenticación
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: pluto-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command: start-dev
    networks:
      - pluto-network

  # Prometheus para métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: pluto-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - pluto-network

  # Grafana para dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: pluto-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - pluto-network

  # Aplicación Spring Boot
  learning-platform:
    build: .
    container_name: pluto-learning-app
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/pluto_learning
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/pluto_learning_content
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/pluto-learning
    depends_on:
      - postgres
      - mongodb
      - kafka
      - keycloak
    networks:
      - pluto-network

volumes:
  postgres_data:
  mongodb_data:
  grafana_data:

networks:
  pluto-network:
    driver: bridge

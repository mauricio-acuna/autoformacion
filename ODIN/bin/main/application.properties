# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/pluto_learning
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false

# MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/pluto_learning_content

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=learning-platform
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Security Configuration (Keycloak)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/pluto-learning
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/pluto-learning/protocol/openid-connect/certs

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true
management.tracing.sampling.probability=1.0

# Application Configuration
spring.application.name=pluto-learning-platform
server.port=8081

# Logging
logging.level.com.pluto.learning=INFO
logging.level.org.springframework.security=DEBUG

# OpenAPI Documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
